
    model {
    # Priors and constraints
    for (t in 1:(n.occasions-1)){
    phi.intro[t] <- mean.phiintro
    phi.scrub[t] <- mean.phiscrub
    p[t] <- mean.p
    }
    mean.phiintro ~ dunif(0, 1)          # Prior for mean survival in introduced habitat
    mean.phiscrub ~ dunif(0, 1)           # Prior for mean survival in scrub
    mean.p ~ dunif(0, 1)               # Prior for mean recapture
    # Define the multinomial likelihood
    for (t in 1:(n.occasions-1)){
    marr.i[t,1:n.occasions] ~ dmulti(pr.i[t,], r.i[t])
    marr.s[t,1:n.occasions] ~ dmulti(pr.s[t,], r.s[t])
    }
    # Calculate the number of birds released each year
    for (t in 1:(n.occasions-1)){
    r.i[t] <- sum(marr.i[t,])
    r.s[t] <- sum(marr.s[t,])
    }
    # Define the cell probabilities of the m-arrays
    # Main diagonal
    for (t in 1:(n.occasions-1)){
    q[t] <- 1-p[t]            # Probability of non-recapture
    pr.i[t,t] <- phi.intro[t]*p[t]
    pr.s[t,t] <- phi.scrub[t]*p[t]
    # Above main diagonal
    for (j in (t+1):(n.occasions-1)){
    pr.i[t,j] <- prod(phi.intro[t:j])*prod(q[t:(j-1)])*p[j]
    pr.s[t,j] <- prod(phi.scrub[t:j])*prod(q[t:(j-1)])*p[j]
    } #j
    # Below main diagonal
    for (j in 1:(t-1)){
    pr.i[t,j] <- 0
    pr.s[t,j] <- 0
    } #j
    } #t
    # Last column: probability of non-recapture
    for (t in 1:(n.occasions-1)){
    pr.i[t,n.occasions] <- 1-sum(pr.i[t,1:(n.occasions-1)])
    pr.s[t,n.occasions] <- 1-sum(pr.s[t,1:(n.occasions-1)])
    } #t
    
    # Assess model fit using Freeman-Tukey statistic
    # Compute fit statistics for observed data
    for (t in 1:(n.occasions-1)){
    for (j in 1:n.occasions){
    expmarr.i[t,j] <- r.i[t]*pr.i[t,j]
    expmarr.s[t,j] <- r.s[t]*pr.s[t,j]
    E.org.i[t,j] <- pow((pow(marr.i[t,j], 0.5)-pow(expmarr.i[t,j], 0.5)), 2)
    E.org.s[t,j] <- pow((pow(marr.s[t,j], 0.5)-pow(expmarr.s[t,j], 0.5)), 2)
    }
    }
    # Generate replicate data and compute fit stats from them
    for (t in 1:(n.occasions-1)){
    marr.new.i[t,1:n.occasions] ~ dmulti(pr.i[t,], r.i[t])
    marr.new.s[t,1:n.occasions] ~ dmulti(pr.s[t,], r.s[t])
    for (j in 1:n.occasions){
    E.new.i[t,j] <- pow((pow(marr.new.i[t,j], 0.5)-pow(expmarr.i[t,j], 0.5)), 2)
    E.new.s[t,j] <- pow((pow(marr.new.s[t,j], 0.5)-pow(expmarr.s[t,j], 0.5)), 2)
    }
    }
    fit <- sum(E.org.i[,]) + sum(E.org.s[,])
    fit.new <- sum(E.new.i[,]) + sum(E.new.s[,])
    }
    
